import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score
import numpy as np
import math 

def accuracy_over_uncertainty(y_true, y_preds, uncertainties, mode = 'logits', title='Accuracy over Uncertainty Threshold', filename='accuracy_over_uncertainty.jpg'):

    fig, axs = plt.subplots(1, 3, figsize = (50, 12))

    if mode == 'logits':
        thresholds = np.arange(0.1, 0.8, 0.1)
    elif mode == 'softmax':
        thresholds = np.arange(0.005, 0.04, 0.005)
    
    for idx, ax in enumerate(axs):
        ax2 = ax.twinx()
        accuracies = []
        num_samples = []

        y_pred = y_preds[idx]         
        uncertainty = uncertainties[idx]

        for threshold in thresholds:
            temp_y_true = []
            temp_y_pred = []

            for index in range(len(uncertainty)):
                if uncertainty[index] < threshold:
                    temp_y_true.append(y_true[index])
                    temp_y_pred.append(y_pred[index])

            accuracy = accuracy_score(temp_y_true, temp_y_pred)
            if math.isnan(accuracy):
                accuracy = 0
            accuracies.append(accuracy)
            num_samples.append(len(temp_y_true))

            ax.scatter(threshold, accuracy, color='blue')
            ax2.scatter(threshold, len(temp_y_true), color='red')

        ax.plot(thresholds, accuracies, color = 'blue')
        ax2.plot(thresholds, num_samples, color = 'red')
        ax.set_xlabel('Uncertainty Threshold', fontsize = 45)
        ax.set_ylabel('Accuracy', fontsize = 45, color = 'blue')
        ax2.set_ylabel('Number of Samples', fontsize = 45, color='red')
        ax.tick_params(axis='y', labelsize = 40)
        ax.tick_params(axis='x', labelsize = 40)
        ax2.tick_params(axis='y', labelsize = 40)
        ax2.tick_params(axis='x', labelsize = 40)
        ax.set_title(f'{title[idx]}', fontsize = 50)

    plt.tight_layout()
    plt.savefig(filename)

def prediction_analysis(y_true, y_preds):

    same_prediction = 0
    same_prediction_correct = 0
    same_prediction_incorrect = 0

    mri_chosen_correct = 0
    mri_chosen_incorrect = 0

    pet_chosen_correct = 0
    pet_chosen_incorrect = 0

    for i in range(len(y_true)):
        # if same prediction
        if y_preds[0][i] == y_preds[1][i]:
            same_prediction += 1
            if y_preds[0][i] == y_true[i]:
                same_prediction_correct += 1
            else:
                same_prediction_incorrect += 1

        # if mri and not pet
        if y_preds[0][i] == y_preds[2][i] and y_preds[1][i] != y_preds[2][i]:
            if y_preds[0][i] == y_true[i]:
                mri_chosen_correct += 1
            else:
                mri_chosen_incorrect += 1

        # if pet and not mri
        if y_preds[0][i] != y_preds[2][i] and y_preds[1][i] == y_preds[2][i]:
            if y_preds[1][i] == y_true[i]:
                pet_chosen_correct += 1
            else:
                pet_chosen_incorrect += 1

    print('Same Prediction:', same_prediction)
    print('Same Prediction Correct:', same_prediction_correct)
    print('Same Prediction Incorrect:', same_prediction_incorrect)

    print('MRI Chosen total:', mri_chosen_correct + mri_chosen_incorrect)
    print('MRI Chosen Correct:', mri_chosen_correct)
    print('MRI Chosen Incorrect:', mri_chosen_incorrect)

    print('PET Chosen total:', pet_chosen_correct + pet_chosen_incorrect)
    print('PET Chosen Correct:', pet_chosen_correct)
    print('PET Chosen Incorrect:', pet_chosen_incorrect)

titles = ['MRI Accuracy over Uncertainty Thresholds','PET Accuracy over Uncertainty Thresholds','Final Accuracy over Uncertainty Thresholds']

true = [0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 2, 2, 1, 1,
        1, 1, 1, 0, 0, 2, 0, 2, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2, 2, 2, 0, 1, 1, 2,
        2, 2, 1, 1, 0, 1, 1, 2, 1, 0, 2, 0, 1, 1, 1, 0, 2, 0, 1, 2, 0, 1, 0, 2,
        2, 2, 1, 1, 2, 0, 0, 0, 0, 2, 1, 2, 2, 0, 0, 1, 1, 1, 2, 1, 0, 0, 2, 2,
        1, 2, 2, 1, 0, 2, 1, 1, 2, 2, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 0,
        0, 1, 1, 2, 2, 1, 0, 0, 2, 2, 0, 1]

preds = [
    [2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 0, 2, 2, 1, 2, 0, 2, 1, 0, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 1, 1, 1, 2, 2, 0, 0, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 2, 0, 0, 2, 2, 0, 1],
    [0, 0, 0, 2, 0, 2, 0, 1, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 2, 0, 2, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2, 2, 2, 0, 1, 1, 1, 0, 2, 1, 1, 0, 1, 1, 2, 1, 0, 0, 2, 1, 2, 2, 0, 2, 0, 1, 0, 0, 1, 0, 2, 2, 0, 0, 1, 2, 1, 0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 1, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 1, 0, 2, 0, 1, 2, 2, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0, 1],
    [0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 2, 0, 2, 2, 2, 1, 0, 1, 1, 0, 2, 2, 2, 2, 2, 0, 1, 1, 2, 2, 2, 1, 1, 0, 1, 1, 2, 1, 0, 2, 2, 1, 1, 1, 0, 2, 2, 1, 2, 0, 1, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 2, 2, 0, 2, 0, 0, 1, 1, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 1, 0, 2, 1, 1, 1, 2, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 1, 0, 0, 2, 2, 0, 1]
]

uncertainties = [
    [0.0060095764, 0.043554273, 1.1976399e-05, 0.0004985699, 0.020920573, 0.0011573443, 0.024313848, 0.028047225, 3.6825357e-05, 0.019767625, 0.036313906, 4.771923e-07, 0.0071502044, 0.00026138138, 2.7108332e-05, 0.008875769, 0.029258205, 9.6694464e-05, 0.00012707146, 0.0010979712, 0.04372945, 0.010309992, 0.00013417937, 0.0003894944, 0.014185122, 0.000950022, 0.041862898, 0.021971963, 0.0046197167, 0.00832548, 0.036905408, 1.7451624e-05, 0.027700074, 0.040020164, 0.025746904, 0.00020547351, 0.042207517, 0.02588359, 0.019044098, 0.003480805, 0.028365664, 5.3141502e-08, 0.0066219787, 6.0316714e-05, 0.022491276, 0.0059610046, 0.041239135, 0.0061087697, 0.0003961875, 3.4411964e-09, 0.00036518334, 3.937186e-05, 0.002832382, 2.6303892e-06, 0.000842148, 9.295003e-06, 0.032423873, 0.008413786, 2.5410007e-05, 0.039791152, 0.00084640784, 0.0040832683, 0.00017460727, 0.021058403, 1.622903e-05, 3.83237e-06, 0.036239155, 0.006253162, 0.040550172, 0.030542633, 4.237707e-06, 8.596685e-05, 0.00016984837, 3.0272973e-05, 0.003997594, 0.00035376265, 0.001446133, 0.012833397, 3.6084002e-06, 0.005854597, 0.010399424, 0.00039927333, 0.028911395, 0.004227627, 0.0059333956, 0.005577316, 0.0001242111, 4.0262844e-08, 0.040493272, 0.010019584, 0.020545488, 0.0064389217, 2.3976017e-06, 0.0006049361, 0.0013701952, 0.00022587499, 0.0049443017, 0.004974152, 0.00014337513, 0.02496855, 0.019692808, 2.2395466e-06, 2.7220687e-05, 0.0042390544, 1.9771058e-05, 0.008321579, 0.0033715866, 3.7018935e-06, 0.021716546, 0.010867081, 0.00049659127, 0.012393931, 0.010061577, 0.0024516284, 0.0015806744, 0.013082731, 0.0005645526, 7.234395e-06, 2.3588861e-06, 0.033933386, 2.3382067e-07, 0.010276237, 0.0073233945, 5.419081e-05, 7.443047e-05, 0.03561371, 0.00047014822, 0.015558753, 0.013729546, 0.01313903, 0.0019587558, 0.0043453276],
    [9.070174e-06, 7.609229e-06, 2.2881475e-06, 0.03455551, 8.698826e-05, 0.0011563207, 5.0805815e-05, 0.00023149762, 0.012986629, 9.381864e-05, 0.0022866144, 0.018983193, 0.005241221, 0.0037518598, 5.728827e-06, 1.6417716e-05, 0.003030341, 0.00010516153, 0.0066461135, 0.0040758466, 0.0014455224, 0.0066117076, 1.7961305e-05, 0.027834086, 0.005374405, 0.00021035815, 0.0011356133, 3.932388e-06, 1.2842662e-05, 0.00048502942, 1.8176444e-05, 0.0022907038, 0.0005126801, 0.0011559317, 0.010549953, 3.7061818e-05, 0.0009543385, 0.023954904, 0.018714197, 0.0036375576, 0.0017265601, 0.026603881, 0.00013124877, 1.3753493e-06, 5.815943e-06, 0.0124013005, 0.000792063, 0.014253701, 0.0020252257, 0.0074849958, 0.0064364774, 0.0007647276, 1.9712766e-06, 0.002152439, 6.81468e-05, 0.0003117676, 0.00434142, 2.1564324e-08, 0.017000694, 0.03011909, 1.6000578e-05, 0.0050555216, 0.026551843, 0.0016263983, 0.0075778775, 0.030796375, 0.030472538, 0.036805805, 4.6185185e-08, 0.009694822, 0.0023134558, 0.0011186308, 0.012187327, 0.00024381738, 0.01881376, 0.02971681, 0.009952715, 0.027206134, 0.00018354469, 0.005770867, 6.5463326e-05, 0.0029822602, 0.022160782, 0.025421817, 0.0015282048, 0.027950007, 0.0010055801, 0.012629374, 0.00224576, 0.02016053, 0.0256093, 0.0036292654, 0.002838941, 6.989634e-11, 0.0011622994, 0.0057413587, 0.0020047454, 0.00019622121, 0.025443092, 0.027964681, 0.004548596, 0.002043333, 0.030875128, 0.013826823, 0.036066286, 0.00089898123, 0.0075175962, 0.004383849, 4.8450906e-06, 5.2623112e-05, 0.011304975, 6.570117e-05, 2.152588e-07, 0.0007920342, 1.5292557e-05, 0.0049030688, 1.9543946e-05, 0.0008041197, 3.1614559e-06, 0.0002569371, 0.0015605171, 0.001478366, 0.030923543, 6.3959004e-07, 0.0006202841, 2.3055916e-05, 1.7937331e-05, 0.0065166187, 2.5831643e-05, 0.0012923711, 6.572238e-06, 4.7785707e-06],  
    [9.070174e-06, 7.609229e-06, 2.2881475e-06, 0.0004985699, 8.698826e-05, 0.0011563207, 5.0805815e-05, 0.00023149762, 3.6825357e-05, 9.381864e-05, 0.0022866144, 4.771923e-07, 0.005241221, 0.00026138138, 5.728827e-06, 1.6417716e-05, 0.003030341, 9.6694464e-05, 0.00012707146, 0.0010979712, 0.0014455224, 0.0066117076, 1.7961305e-05, 0.0003894944, 0.005374405, 0.00021035815, 0.0011356133, 3.932388e-06, 1.2842662e-05, 0.00048502942, 1.8176444e-05, 1.7451624e-05, 0.0005126801, 0.0011559317, 0.010549953, 3.7061818e-05, 0.0009543385, 0.023954904, 0.018714197, 0.003480805, 0.0017265601, 5.3141502e-08, 0.00013124877, 1.3753493e-06, 5.815943e-06, 0.0059610046, 0.000792063, 0.0061087697, 0.0003961875, 3.4411964e-09, 0.00036518334, 3.937186e-05, 1.9712766e-06, 2.6303892e-06, 6.81468e-05, 9.295003e-06, 0.00434142, 2.1564324e-08, 2.5410007e-05, 0.03011909, 1.6000578e-05, 0.0040832683, 0.00017460727, 0.0016263983, 1.622903e-05, 3.83237e-06, 0.030472538, 0.006253162, 4.6185185e-08, 0.009694822, 4.237707e-06, 8.596685e-05, 0.00016984837, 3.0272973e-05, 0.003997594, 0.00035376265, 0.001446133, 0.012833397, 3.6084002e-06, 0.005770867, 6.5463326e-05, 0.00039927333, 0.022160782, 0.004227627, 0.0015282048, 0.005577316, 0.0001242111, 4.0262844e-08, 0.00224576, 0.010019584, 0.020545488, 0.0036292654, 2.3976017e-06, 6.989634e-11, 0.0011622994, 0.00022587499, 0.0020047454, 0.00019622121, 0.00014337513, 0.02496855, 0.004548596, 2.2395466e-06, 2.7220687e-05, 0.0042390544, 1.9771058e-05, 0.00089898123, 0.0033715866, 3.7018935e-06, 4.8450906e-06, 5.2623112e-05, 0.00049659127, 6.570117e-05, 2.152588e-07, 0.0007920342, 1.5292557e-05, 0.0049030688, 1.9543946e-05, 7.234395e-06, 2.3588861e-06, 0.0002569371, 2.3382067e-07, 0.001478366, 0.0073233945, 6.3959004e-07, 7.443047e-05, 2.3055916e-05, 1.7937331e-05, 0.0065166187, 2.5831643e-05, 0.0012923711, 6.572238e-06, 4.7785707e-06]
]

print('Softmax probabilities')
prediction_analysis(true, preds)
accuracy_over_uncertainty(true, preds, uncertainties, mode = 'softmax', title = titles, filename='accuracy_over_uncertainty_softmax.jpg')


preds = [
    [2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 0, 2, 2, 1, 2, 0, 2, 1, 0, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 0, 2, 2, 1, 2, 2, 2, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 1, 1, 1, 2, 2, 0, 0, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 2, 0, 0, 2, 2, 0, 1],
    [0, 0, 0, 2, 0, 2, 0, 1, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 2, 0, 2, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2, 2, 2, 0, 1, 1, 1, 0, 2, 1, 1, 0, 1, 1, 2, 1, 0, 0, 2, 1, 2, 2, 0, 2, 0, 1, 0, 0, 1, 0, 2, 2, 0, 0, 1, 2, 1, 0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 1, 1, 2, 1, 0, 0, 2, 2, 1, 2, 2, 1, 0, 2, 0, 1, 2, 2, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0, 1],
    [0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 2, 0, 2, 2, 2, 1, 0, 1, 1, 0, 2, 2, 2, 2, 2, 0, 1, 1, 2, 2, 2, 1, 1, 0, 1, 1, 2, 1, 0, 2, 2, 1, 2, 2, 0, 2, 2, 1, 0, 0, 1, 0, 2, 2, 2, 0, 1, 2, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 1, 1, 2, 2, 0, 0, 2, 2, 1, 2, 2, 1, 0, 2, 0, 1, 2, 2, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0, 1]
]

uncertainties = [
    [0.33383918, 0.53217316, 0.49152833, 0.2985, 0.61495966, 0.34290728, 0.316733, 0.4770007, 0.43374157, 0.59444267, 0.55883145, 0.27159244, 0.43307626, 0.62205225, 0.3117673, 0.7162123, 0.3426602, 0.37571812, 0.4211306, 0.20812023, 0.5275537, 0.13047014, 0.5580737, 0.14092644, 0.6363689, 0.64122427, 0.6163003, 0.46921182, 0.7144625, 0.3254174, 0.4605256, 0.34683228, 0.531502, 0.7322104, 0.4841168, 0.4658599, 0.5520135, 0.36150193, 0.6816186, 0.10678976, 0.6348783, 0.20119855, 0.6561486, 0.22451097, 0.39368773, 0.7212252, 0.50068927, 0.31606957, 0.27093214, 0.16135108, 0.6880655, 0.5867219, 0.4080497, 0.42996344, 0.38623914, 0.25629494, 0.4320633, 0.64364696, 0.28087318, 0.65004635, 0.6373279, 0.68665016, 0.4072247, 0.5752828, 0.27170223, 0.37591016, 0.5107665, 0.73304653, 0.43057477, 0.5646986, 0.34158358, 0.30969292, 0.27562404, 0.331383, 0.46968588, 0.4316318, 0.4061502, 0.44277883, 0.43458003, 0.63861156, 0.5773369, 0.34619087, 0.42211768, 0.35999334, 0.6038048, 0.4822882, 0.46893033, 0.45070547, 0.5692247, 0.12201977, 0.32189018, 0.0816023, 0.4115932, 0.59901905, 0.51111835, 0.30153883, 0.10303237, 0.36463472, 0.3221341, 0.6472099, 0.69469166, 0.16577835, 0.48279628, 0.31370336, 0.79259795, 0.42157006, 0.12710804, 0.33691892, 0.52159256, 0.6562726, 0.39560866, 0.71139693, 0.6914274, 0.44109187, 0.4326914, 0.595112, 0.62609, 0.4364029, 0.43018898, 0.505119, 0.26637194, 0.60008657, 0.5892851, 0.3640941, 0.30714023, 0.5382716, 0.42874545, 0.52464044, 0.21224445, 0.17902403, 0.4849586, 0.3866511],
    [0.3033284, 0.2901377, 0.4404398, 0.4312106, 0.30788136, 0.32071042, 0.33284926, 0.37271333, 0.43472958, 0.3409657, 0.41026992, 0.49015582, 0.29469973, 0.45472312, 0.36007068, 0.28503558, 0.32976705, 0.30041385, 0.24021737, 0.5264355, 0.27882838, 0.35523266, 0.42346093, 0.33870596, 0.12038505, 0.45943245, 0.6166843, 0.34313405, 0.31303805, 0.46997258, 0.39747342, 0.472, 0.30962658, 0.2277796, 0.16660777, 0.35630703, 0.3955183, 0.27032244, 0.42599988, 0.2635524, 0.49696493, 0.34683943, 0.27613568, 0.48042163, 0.20487931, 0.6597438, 0.23258299, 0.32362497, 0.29993662, 0.1586016, 0.4713746, 0.37651652, 0.318706, 0.42281097, 0.3734908, 0.35707042, 0.19462548, 0.23318204, 0.35883433, 0.37263513, 0.19953708, 0.41559476, 0.24063405, 0.48763773, 0.4566725, 0.46028528, 0.5374141, 0.5001324, 0.26422915, 0.37169072, 0.3063531, 0.38404986, 0.3471206, 0.37827092, 0.38589597, 0.3600781, 0.35977063, 0.47482, 0.33476633, 0.3913271, 0.32460278, 0.4795177, 0.3312741, 0.31762785, 0.33894712, 0.4650477, 0.5104665, 0.32546628, 0.13399047, 0.27492687, 0.36311704, 0.12948716, 0.50934637, 0.2091516, 0.3984371, 0.27265942, 0.28552085, 0.37351614, 0.32184958, 0.27454224, 0.367912, 0.14713587, 0.45776647, 0.13328144, 0.4730807, 0.35167116, 0.2973613, 0.18543983, 0.1345439, 0.31812552, 0.2537323, 0.33493298, 0.36307275, 0.3798667, 0.37507176, 0.5932654, 0.4651206, 0.2759778, 0.42077273, 0.37829208, 0.3130948, 0.28293487, 0.5646045, 0.29505095, 0.3791036, 0.16924411, 0.29994333, 0.4660669, 0.25737128, 0.17182374, 0.27191037, 0.33035666],  
    [0.3033284, 0.2901377, 0.4404398, 0.2985, 0.30788136, 0.32071042, 0.316733, 0.37271333, 0.43374157, 0.3409657, 0.41026992, 0.27159244, 0.29469973, 0.45472312, 0.3117673, 0.28503558, 0.32976705, 0.30041385, 0.24021737, 0.20812023, 0.27882838, 0.13047014, 0.42346093, 0.14092644, 0.12038505, 0.45943245, 0.6163003, 0.34313405, 0.31303805, 0.3254174, 0.39747342, 0.34683228, 0.30962658, 0.2277796, 0.16660777, 0.35630703, 0.3955183, 0.27032244, 0.42599988, 0.10678976, 0.49696493, 0.20119855, 0.27613568, 0.22451097, 0.20487931, 0.6597438, 0.23258299, 0.31606957, 0.27093214, 0.1586016, 0.4713746, 0.37651652, 0.318706, 0.42281097, 0.3734908, 0.25629494, 0.19462548, 0.23318204, 0.28087318, 0.37263513, 0.19953708, 0.41559476, 0.24063405, 0.48763773, 0.27170223, 0.37591016, 0.5107665, 0.5001324, 0.26422915, 0.37169072, 0.3063531, 0.30969292, 0.27562404, 0.331383, 0.38589597, 0.3600781, 0.35977063, 0.44277883, 0.33476633, 0.3913271, 0.32460278, 0.34619087, 0.3312741, 0.31762785, 0.33894712, 0.4650477, 0.46893033, 0.32546628, 0.13399047, 0.12201977, 0.32189018, 0.0816023, 0.4115932, 0.2091516, 0.3984371, 0.27265942, 0.10303237, 0.36463472, 0.32184958, 0.27454224, 0.367912, 0.14713587, 0.45776647, 0.13328144, 0.4730807, 0.35167116, 0.12710804, 0.18543983, 0.1345439, 0.31812552, 0.2537323, 0.33493298, 0.36307275, 0.3798667, 0.37507176, 0.5932654, 0.4651206, 0.2759778, 0.42077273, 0.37829208, 0.26637194, 0.28293487, 0.5646045, 0.29505095, 0.30714023, 0.16924411, 0.29994333, 0.4660669, 0.21224445, 0.17182374, 0.27191037, 0.33035666]
]

print('Logits')
prediction_analysis(true, preds)
accuracy_over_uncertainty(true, preds, uncertainties, mode = 'logits', title = titles, filename='accuracy_over_uncertainty_logits.jpg')

